{
  "Properties": [
    {
      "Id": "table",
      "Type": "Compiled:String",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Parameters.table",
        "CompiledExpression": "={0}",
        "Type": "Compiled:String"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "token",
      "Type": "Compiled:String",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "GetToken",
        "CompiledExpression": "={0}",
        "Type": "Compiled:String"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "MethodBody",
      "Type": "Compiled:String",
      "ValueUsage": "DesignTime",
      "Value": "object querytocall = null;\r\n            \r\n                var serviceStackAssembly = System.Reflection.Assembly.LoadFrom(DLLPath);\r\n                var QueryType = serviceStackAssembly.GetType(\"UpviseClient.Query\");\r\n                querytocall = Activator.CreateInstance(QueryType, new[] { token, url });\r\n\r\n                var selectMethod = QueryType.GetMethod(\"select\");\r\n                var JSONType = serviceStackAssembly.GetType(\"UpviseClient.JSONObject\");\r\n\r\n                var queryreturn = (System.Collections.IEnumerable)selectMethod.Invoke(querytocall, new object[] { table, where });\r\n           \r\n                var JSONToStringMethod = JSONType.GetMethod(\"ToString\");\r\n\r\n             string JSONreturned = \"[\";\r\n\r\n           foreach (var item in queryreturn)\r\n            {\r\n                JSONreturned = JSONreturned + (string)JSONToStringMethod.Invoke(item, new object[] { }) + \",\";\r\n            }\r\n\r\n            JSONreturned = JSONreturned.Remove(JSONreturned.Length - 1, 1);\r\n\r\n            JSONreturned = JSONreturned + \"]\";\r\n\r\n    return JSONreturned;"
    },
    {
      "Id": "url",
      "Type": "Compiled:String",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Settings.UpviseURL",
        "CompiledExpression": "={0}",
        "Type": "Compiled:String"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "DLLPath",
      "Type": "Compiled:String",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Settings.UpviseDLLPath",
        "CompiledExpression": "={0}",
        "Type": "Compiled:String"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "where",
      "Type": "Compiled:String",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Parameters.where",
        "CompiledExpression": "={0}",
        "Type": "Compiled:String"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "ErrorMessage",
      "Type": "Compiled:String",
      "ValueUsage": "DesignTime",
      "Value": null
    },
    {
      "Id": "IsCodeValid",
      "Type": "Compiled:Boolean",
      "ValueUsage": "DesignTime",
      "Value": true
    },
    {
      "Id": "Function         â€‹",
      "Type": "Compiled:String",
      "ValueUsage": "DesignTime",
      "Value": "string Function(string token, string url, string where, string table, string DLLPath)\r\n{\r\n     object querytocall = null;\r\n            \r\n                var serviceStackAssembly = System.Reflection.Assembly.LoadFrom(DLLPath);\r\n                var QueryType = serviceStackAssembly.GetType(\"UpviseClient.Query\");\r\n                querytocall = Activator.CreateInstance(QueryType, new[] { token, url });\r\n\r\n                var selectMethod = QueryType.GetMethod(\"select\");\r\n                var JSONType = serviceStackAssembly.GetType(\"UpviseClient.JSONObject\");\r\n\r\n                var queryreturn = (System.Collections.IEnumerable)selectMethod.Invoke(querytocall, new object[] { table, where });\r\n           \r\n                var JSONToStringMethod = JSONType.GetMethod(\"ToString\");\r\n\r\n             string JSONreturned = \"[\";\r\n\r\n           foreach (var item in queryreturn)\r\n            {\r\n                JSONreturned = JSONreturned + (string)JSONToStringMethod.Invoke(item, new object[] { }) + \",\";\r\n            }\r\n\r\n            JSONreturned = JSONreturned.Remove(JSONreturned.Length - 1, 1);\r\n\r\n            JSONreturned = JSONreturned + \"]\";\r\n\r\n    return JSONreturned;\r\n    \r\n}"
    }
  ],
  "Result": "Compiled:String"
}